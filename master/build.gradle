buildscript {
	ext {
		inHouseRepoHost='192.168.0.92:8081'
		springBoot='org.springframework.boot'
		springVersion='1.3.5.RELEASE'
		defaultEnc='UTF-8'
		javaVersion=1.8
	}
	ext.inHouseRepoHost='192.168.0.92:8081'
	println('aaa:' + project.hasProperty('inHouseRepositoryHost'))
	if(project.hasProperty('inHouseRepositoryHost')){
		println('aaa')
		ext.setProperty('inHouseRepoHost',getProperty('inHouseRepositoryHost'))
	}
	println("http://${inHouseRepoHost}/content/groups/public/")
	repositories {
	    maven{
	    	url "http://${inHouseRepoHost}/content/groups/public/"
	    }
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springVersion}")
		classpath('com.bmuschko:gradle-nexus-plugin:2.3.1')
	}
}
buildscript {
	ext {
		hoge="123"
	}
}
println(hoge)
subprojects {
	apply plugin: 'java'
	repositories {
	    maven{
	    	url "http://${inHouseRepoHost}/content/groups/public/"
	    }
	    jcenter()
	}
	dependencies {
	    compile 'org.slf4j:slf4j-api:1.7.18'
	
	    testCompile 'junit:junit:4.12'
	}
	
	tasks.withType(AbstractCompile)*.options*.encoding = "${defaultEnc}"
	tasks.withType(GroovyCompile)*.groovyOptions*.encoding ="${defaultEnc}"
	
	compileJava {
		sourceCompatibility = javaVersion
		targetCompatibility = javaVersion
	}
	
}

project(':app-project'){
	println(project.name)
	apply plugin: 'application'
	apply plugin: 'spring-boot'

	dependencies {
		compile( "org.springframework.boot:spring-boot-starter" )
	}
	
	jar {
		manifest {
			attributes 'Main-Class' : 'jp.co.seamark.example.Application'
		}
	}
}

project(':web-project'){
	apply plugin: 'spring-boot'

	println(project.name)
}
